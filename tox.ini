[tox]
envlist = linters,pep8,pylint
minversion = 2.3
skipsdist = True

[testenv]
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/upper-constraints.txt} {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=60
deps = -r{toxinidir}/test-requirements.txt
allowlist_externals = reno

[testenv:linters]
basepython = python3
# bashate ignore:
#  E006 - accept long lines
#  E040 - false positive on |& syntax (new in bash 4)
allowlist_externals = bash
commands =
  bash -c "find {toxinidir}                              \
            \( -name .tox -prune \)                      \
            -o -type f -name '*.yaml'                    \
            -not \( -type f -path *template* -prune \)   \
            -print0 | xargs -0 yamllint"
  bash -c "find {toxinidir}          \
         -not \( -type d -name .?\* -prune \) \
         -not \( -type d -path {toxinidir}/toCOPY/mock_overlay -prune \) \
         -type f                              \
         -not -name \*~                       \
         -not -name \*.md                     \
         -name \*.sh                          \
         -print0 | xargs -0 bashate -v -iE006,E040"

[testenv:pep8]
basepython = python3
usedevelop = False
description =
    Run style checks.

commands =
    flake8 stx

[testenv:pylint]
basepython = python3
sitepackages = False

deps = {[testenv]deps}
       ruamel.yaml
       pylint<2.5.0
commands =
     pylint {posargs} --rcfile=./pylint.rc stx

[flake8]
# E123, E125 skipped as they are invalid PEP-8.
# E501 skipped because some of the code files include templates
#      that end up quite wide
# H404 multi line docstring should start without a leading new line
# H405 multi line docstring summary not separated with an empty line
# W504 line break after binary operator
# F401 'XXXXX' imported but unused
show-source = True
ignore = E123,E125,E501,H404,H405,W504,F401
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,release-tag-*

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    rm -rf doc/build
    sphinx-build -a -E -W -d doc/build/doctrees -b html doc/source doc/build/html
allowlist_externals = rm

[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    rm -rf releasenotes/build
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
allowlist_externals = rm

[testenv:newnote]
basepython = python3
# Re-use the releasenotes venv
envdir = {toxworkdir}/releasenotes
deps = -r{toxinidir}/doc/requirements.txt
commands = reno new {posargs}
